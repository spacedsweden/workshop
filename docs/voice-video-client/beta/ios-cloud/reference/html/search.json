{"Functions.html#/c:@F@SINToggleCaptureDevicePosition":{"name":"SINToggleCaptureDevicePosition","abstract":"<p>If input position is front-facing camera, returns back-facing camera."},"Functions.html#/c:@F@SINUIImageFromPixelBuffer":{"name":"SINUIImageFromPixelBuffer","abstract":"<p>Convert a CVPixelBufferRef to an UIImage.</p>"},"Type%20Definitions.html#/c:SINLogCallback.h@T@SINLogCallback":{"name":"SINLogCallback","abstract":"<p>SINLogCallback defines a type of callback that could be used to receive debug logs from SDK</p>"},"Protocols/SINVideoFrameCallback.html#/c:objc(pl)SINVideoFrameCallback(im)onFrame:completionHandler:":{"name":"-onFrame:completionHandler:","abstract":"<p>Callback handler that can be used to post-process video frames.</p>","parent_name":"SINVideoFrameCallback"},"Protocols/SINVideoController.html#/c:objc(pl)SINVideoController(py)captureDevicePosition":{"name":"captureDevicePosition","abstract":"<p>Indicates the capture device position (front-facing or back-facing","parent_name":"SINVideoController"},"Protocols/SINVideoController.html#/c:objc(pl)SINVideoController(py)disableIdleTimerOnCapturing":{"name":"disableIdleTimerOnCapturing","abstract":"<p>Automatically set/unset UIApplication.idleTimerDisabled when video capturing is started / stopped.","parent_name":"SINVideoController"},"Protocols/SINVideoController.html#/c:objc(pl)SINVideoController(im)remoteView":{"name":"-remoteView","abstract":"<p>View into which the remote peer video stream is rendered.</p>","parent_name":"SINVideoController"},"Protocols/SINVideoController.html#/c:objc(pl)SINVideoController(im)localView":{"name":"-localView","abstract":"<p>View into which the locally captured video stream is rendered.</p>","parent_name":"SINVideoController"},"Protocols/SINVideoController.html#/c:objc(pl)SINVideoController(im)setRemoteVideoFrameCallback:":{"name":"-setRemoteVideoFrameCallback:","abstract":"<p>Set a callback for handling video frames for remote video streams.</p>","parent_name":"SINVideoController"},"Protocols/SINVideoController.html#/c:objc(pl)SINVideoController(im)setLocalVideoFrameCallback:":{"name":"-setLocalVideoFrameCallback:","abstract":"<p>Set a callback for listening to video frames captured from the local camera.</p>","parent_name":"SINVideoController"},"Protocols/SINNotificationResult.html#/c:objc(pl)SINNotificationResult(py)isValid":{"name":"isValid","abstract":"<p>Indicates whether the notification is valid or not.</p>","parent_name":"SINNotificationResult"},"Protocols/SINNotificationResult.html#/c:objc(pl)SINNotificationResult(im)isCall":{"name":"-isCall","abstract":"<p>Indicates whether the notification is call related</p>","parent_name":"SINNotificationResult"},"Protocols/SINNotificationResult.html#/c:objc(pl)SINNotificationResult(im)callResult":{"name":"-callResult","abstract":"<p>If the notification is call related (isCall is true), callResult contains the notification result</p>","parent_name":"SINNotificationResult"},"Protocols/SINManagedPushDelegate.html#/c:objc(pl)SINManagedPushDelegate(im)managedPush:didReceiveIncomingPushWithPayload:forType:":{"name":"-managedPush:didReceiveIncomingPushWithPayload:forType:","abstract":"<p>Tells the delegate that a push notification was received. The push notification is a VoIP push notification.</p>","parent_name":"SINManagedPushDelegate"},"Protocols/SINClientRegistration.html#/c:objc(pl)SINClientRegistration(im)registerWithJWT:":{"name":"-registerWithJWT:","abstract":"<p>Proceed with user registration by providing a signed JWT (JSON Web Token).</p>","parent_name":"SINClientRegistration"},"Protocols/SINClientRegistration.html#/c:objc(pl)SINClientRegistration(im)registerDidFail:":{"name":"-registerDidFail:","abstract":"<p>If the application fails to provide a signed user registration","parent_name":"SINClientRegistration"},"Protocols/SINClientDelegate.html#/c:objc(pl)SINClientDelegate(im)client:requiresRegistrationCredentials:":{"name":"-client:requiresRegistrationCredentials:","abstract":"<p>Tells the delegate that it is required to provide additional registration","parent_name":"SINClientDelegate"},"Protocols/SINClientDelegate.html#/c:objc(pl)SINClientDelegate(im)clientDidStart:":{"name":"-clientDidStart:","abstract":"<p>Tells the delegate that the client started the calling functionality.</p>","parent_name":"SINClientDelegate"},"Protocols/SINClientDelegate.html#/c:objc(pl)SINClientDelegate(im)clientDidFail:error:":{"name":"-clientDidFail:error:","abstract":"<p>Tells the delegate that a client failure occurred.</p>","parent_name":"SINClientDelegate"},"Protocols/SINClient.html#/c:objc(pl)SINClient(py)delegate":{"name":"delegate","abstract":"<p>The object that acts as the delegate of the receiving client.</p>","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(py)userId":{"name":"userId","abstract":"<p>ID of the local user</p>","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)setSupportPushNotifications:":{"name":"-setSupportPushNotifications:","abstract":"<p>Specify whether this device should receive incoming calls via push","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)enableManagedPushNotifications":{"name":"-enableManagedPushNotifications","abstract":"<p>Specify that the Sinch SDK and platform should take care of","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)start":{"name":"-start","abstract":"<p>Start client to enable the calling functionality.</p>","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)terminateGracefully":{"name":"-terminateGracefully","abstract":"<p>Terminate client when the Sinch functionality is no longer","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)isStarted":{"name":"-isStarted","abstract":"<p>Check whether client is successfully started.</p>","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)relayPushNotification:":{"name":"-relayPushNotification:","abstract":"<p>Method used to forward a push notification dictionary when using &ldquo;Sinch Managed Push Notifications&rdquo;","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)registerPushNotificationDeviceToken:type:apsEnvironment:":{"name":"-registerPushNotificationDeviceToken:type:apsEnvironment:","abstract":"<p>Register push notification device token for using &ldquo;Sinch Managed Push Notifications&rdquo;.","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)unregisterPushNotificationDeviceToken":{"name":"-unregisterPushNotificationDeviceToken","abstract":"<p>Unregister push notification device token when using &ldquo;Sinch Managed Push Notifications&rdquo;","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)setPushNotificationDisplayName:error:":{"name":"-setPushNotificationDisplayName:error:","abstract":"<p>Specify a display name to be used when the Sinch client sends a push notification on","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)callClient":{"name":"-callClient","abstract":"<p>Returns the call client object for placing and receiving calls.</p>","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)audioController":{"name":"-audioController","abstract":"<p>Retrieve the interface for the audio controller, which provides access","parent_name":"SINClient"},"Protocols/SINClient.html#/c:objc(pl)SINClient(im)videoController":{"name":"-videoController","abstract":"<p>Retrieve the interface for the video controller, which provides","parent_name":"SINClient"},"Protocols/SINCallNotificationResult.html#/c:objc(pl)SINCallNotificationResult(py)isTimedOut":{"name":"isTimedOut","abstract":"<p>Indicates whether the notification has timed out or not.</p>","parent_name":"SINCallNotificationResult"},"Protocols/SINCallNotificationResult.html#/c:objc(pl)SINCallNotificationResult(py)remoteUserId":{"name":"remoteUserId","abstract":"<p>Identifier of the user from which the call represented by the notification originated.</p>","parent_name":"SINCallNotificationResult"},"Protocols/SINCallNotificationResult.html#/c:objc(pl)SINCallNotificationResult(py)callId":{"name":"callId","abstract":"<p>A unique identifier pertaining to the call</p>","parent_name":"SINCallNotificationResult"},"Protocols/SINCallNotificationResult.html#/c:objc(pl)SINCallNotificationResult(py)videoOffered":{"name":"videoOffered","abstract":"<p>Hint that indicates if video is offered in the call.</p>","parent_name":"SINCallNotificationResult"},"Protocols/SINCallNotificationResult.html#/c:objc(pl)SINCallNotificationResult(py)headers":{"name":"headers","abstract":"<p>Return headers set by the caller when initiating the call.</p>","parent_name":"SINCallNotificationResult"},"Protocols/SINCallDetails.html#/c:objc(pl)SINCallDetails(py)startedTime":{"name":"startedTime","abstract":"<p>The start time of the call.</p>","parent_name":"SINCallDetails"},"Protocols/SINCallDetails.html#/c:objc(pl)SINCallDetails(py)establishedTime":{"name":"establishedTime","abstract":"<p>The time at which the call was established, if it reached established state.</p>","parent_name":"SINCallDetails"},"Protocols/SINCallDetails.html#/c:objc(pl)SINCallDetails(py)endedTime":{"name":"endedTime","abstract":"<p>The end time of the call.</p>","parent_name":"SINCallDetails"},"Protocols/SINCallDetails.html#/c:objc(pl)SINCallDetails(py)endCause":{"name":"endCause","abstract":"<p>Holds the cause of why a call ended, after it has ended. It may be one","parent_name":"SINCallDetails"},"Protocols/SINCallDetails.html#/c:objc(pl)SINCallDetails(py)error":{"name":"error","abstract":"<p>If the end cause is error, then this property contains an error object","parent_name":"SINCallDetails"},"Protocols/SINCallDetails.html#/c:objc(pl)SINCallDetails(py)videoOffered":{"name":"videoOffered","abstract":"<p>Hint that indicates if video is offered in the call.</p>","parent_name":"SINCallDetails"},"Protocols/SINCallClientDelegate.html#/c:objc(pl)SINCallClientDelegate(im)client:didReceiveIncomingCall:":{"name":"-client:didReceiveIncomingCall:","abstract":"<p>Tells the delegate that an incoming call has been received.</p>","parent_name":"SINCallClientDelegate"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(py)delegate":{"name":"delegate","abstract":"<p>The object that acts as the delegate of the call client.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callUserWithId:":{"name":"-callUserWithId:","abstract":"<p>Make a call to the user with the given id.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callUserWithId:headers:":{"name":"-callUserWithId:headers:","abstract":"<p>Calls the user with the given id and the given headers.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callUserVideoWithId:":{"name":"-callUserVideoWithId:","abstract":"<p>Make a video call to the user with the given id</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callUserVideoWithId:headers:":{"name":"-callUserVideoWithId:headers:","abstract":"<p>Make a video call to the user with the given id and the give headers</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callPhoneNumber:":{"name":"-callPhoneNumber:","abstract":"<p>Calls a phone number and terminates the call to the PSTN-network (Publicly Switched","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callPhoneNumber:headers:":{"name":"-callPhoneNumber:headers:","abstract":"<p>Calls a phone number and terminate the call to the PSTN-network (Publicly Switched","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callSIP:":{"name":"-callSIP:","abstract":"<p>Make a SIP call to user with the given SIP Identity.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callSIP:headers:":{"name":"-callSIP:headers:","abstract":"<p>Make a SIP call to user with the given SIP Identity and adding the given headers.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callConferenceWithId:":{"name":"-callConferenceWithId:","abstract":"<p>Calls the conference with the given id.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)callConferenceWithId:headers:":{"name":"-callConferenceWithId:headers:","abstract":"<p>Calls the conference with the given id and the given headers.</p>","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)provider:didActivateAudioSession:":{"name":"-provider:didActivateAudioSession:","abstract":"<p>This API is introduced to support CallKit integration. Invoke this method to notify the Sinch SDK that the App has","parent_name":"SINCallClient"},"Protocols/SINCallClient.html#/c:objc(pl)SINCallClient(im)provider:didDeactivateAudioSession:":{"name":"-provider:didDeactivateAudioSession:","abstract":"<p>This API is introduced to support CallKit integration. Invoke this method to notify the Sinch SDK that the App has","parent_name":"SINCallClient"},"Protocols/SINCallDelegate.html#/c:objc(pl)SINCallDelegate(im)callDidEnd:":{"name":"-callDidEnd:","abstract":"<p>Tells the delegate that the call ended.</p>","parent_name":"SINCallDelegate"},"Protocols/SINCallDelegate.html#/c:objc(pl)SINCallDelegate(im)callDidProgress:":{"name":"-callDidProgress:","abstract":"<p>Tells the delegate that the outgoing call is progressing and a progress tone can be played.</p>","parent_name":"SINCallDelegate"},"Protocols/SINCallDelegate.html#/c:objc(pl)SINCallDelegate(im)callDidEstablish:":{"name":"-callDidEstablish:","abstract":"<p>Tells the delegate that the call was established.</p>","parent_name":"SINCallDelegate"},"Protocols/SINCallDelegate.html#/c:objc(pl)SINCallDelegate(im)callDidAddVideoTrack:":{"name":"-callDidAddVideoTrack:","abstract":"<p>Tells the delegate that a video track has been added to the call.","parent_name":"SINCallDelegate"},"Protocols/SINCallDelegate.html#/c:objc(pl)SINCallDelegate(im)callDidPauseVideoTrack:":{"name":"-callDidPauseVideoTrack:","abstract":"<p>Tells the delegate that a video track has been paused in the call.","parent_name":"SINCallDelegate"},"Protocols/SINCallDelegate.html#/c:objc(pl)SINCallDelegate(im)callDidResumeVideoTrack:":{"name":"-callDidResumeVideoTrack:","abstract":"<p>Tells the delegate that a video track has been resumed in the call.","parent_name":"SINCallDelegate"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)delegate":{"name":"delegate","abstract":"<p>The object that acts as the delegate of the call.</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)callId":{"name":"callId","abstract":"<p>String that is used as an identifier for this particular call.</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)remoteUserId":{"name":"remoteUserId","abstract":"<p>The id of the remote participant in the call.</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)details":{"name":"details","abstract":"<p>Metadata about a call, such as start time.</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)state":{"name":"state","abstract":"<p>The state the call is currently in. It may be one of the following:</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)direction":{"name":"direction","abstract":"<p>The direction of the call. It may be one of the following:</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)headers":{"name":"headers","abstract":"<p>Call headers.</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(py)userInfo":{"name":"userInfo","abstract":"<p>The user data property may be used to associate an arbitrary","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(im)answer":{"name":"-answer","abstract":"<p>Answer an incoming call.</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(im)hangup":{"name":"-hangup","abstract":"<p>Ends the call, regardless of what state it is in. If the call is","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(im)sendDTMF:":{"name":"-sendDTMF:","abstract":"<p>Sends a DTMF tone for tone dialing. (Only applicable for calls terminated","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(im)pauseVideo":{"name":"-pauseVideo","abstract":"<p>Pause video track for this call</p>","parent_name":"SINCall"},"Protocols/SINCall.html#/c:objc(pl)SINCall(im)resumeVideo":{"name":"-resumeVideo","abstract":"<p>Start video track for this call</p>","parent_name":"SINCall"},"Protocols/SINAudioControllerDelegate.html#/c:objc(pl)SINAudioControllerDelegate(im)audioControllerMuted:":{"name":"-audioControllerMuted:","abstract":"<p>Notifies the delegate that the microphone was muted.</p>","parent_name":"SINAudioControllerDelegate"},"Protocols/SINAudioControllerDelegate.html#/c:objc(pl)SINAudioControllerDelegate(im)audioControllerUnmuted:":{"name":"-audioControllerUnmuted:","abstract":"<p>Notifies the delegate that the microphone was unmuted.</p>","parent_name":"SINAudioControllerDelegate"},"Protocols/SINAudioControllerDelegate.html#/c:objc(pl)SINAudioControllerDelegate(im)audioControllerSpeakerEnabled:":{"name":"-audioControllerSpeakerEnabled:","abstract":"<p>Notifies the delegate that the speaker was enabled.</p>","parent_name":"SINAudioControllerDelegate"},"Protocols/SINAudioControllerDelegate.html#/c:objc(pl)SINAudioControllerDelegate(im)audioControllerSpeakerDisabled:":{"name":"-audioControllerSpeakerDisabled:","abstract":"<p>Notifies the delegate that the speaker was disabled.</p>","parent_name":"SINAudioControllerDelegate"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(py)delegate":{"name":"delegate","abstract":"<p>The object that acts as the delegate of the audio controller.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)setAudioSessionCategoryOptions:":{"name":"-setAudioSessionCategoryOptions:","abstract":"<p>Use this method to override the default AVAudioSessionCategoryOptions that will","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)mute":{"name":"-mute","abstract":"<p>Mute the microphone.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)unmute":{"name":"-unmute","abstract":"<p>Unmute the microphone.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)enableSpeaker":{"name":"-enableSpeaker","abstract":"<p>Route the call audio through the speaker.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)disableSpeaker":{"name":"-disableSpeaker","abstract":"<p>Route the call audio through the handset earpiece.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)startPlayingSoundFile:loop:error:":{"name":"-startPlayingSoundFile:loop:error:","abstract":"<p>Play a sound file, for the purpose of playing ringtones, etc.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)stopPlayingSoundFile":{"name":"-stopPlayingSoundFile","abstract":"<p>Stop playing the sound file.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html#/c:objc(pl)SINAudioController(im)configureAudioSessionForCallKitCall":{"name":"-configureAudioSessionForCallKitCall","abstract":"<p>Configure the audio session for an incoming CallKit call.</p>","parent_name":"SINAudioController"},"Protocols/SINAudioController.html":{"name":"SINAudioController","abstract":"<p>The SINAudioController provides methods for controlling audio related"},"Protocols/SINAudioControllerDelegate.html":{"name":"SINAudioControllerDelegate","abstract":"<p>The delegate of a SINAudioController object must adopt the"},"Protocols/SINCall.html":{"name":"SINCall","abstract":"<p>The SINCall represents a call.</p>"},"Protocols/SINCallDelegate.html":{"name":"SINCallDelegate","abstract":"<p>The delegate of a SINCall object must adopt the SINCallDelegate"},"Protocols/SINCallClient.html":{"name":"SINCallClient","abstract":"<p>SINCallClient provides the entry point to the calling functionality of the Sinch SDK."},"Protocols/SINCallClientDelegate.html":{"name":"SINCallClientDelegate","abstract":"<p>The delegate of a SINCallClient object must adopt the SINCallClientDelegate protocol.</p>"},"Protocols/SINCallDetails.html":{"name":"SINCallDetails","abstract":"<p>The SINCallDetails holds metadata about a call (SINCall).</p>"},"Protocols/SINCallNotificationResult.html":{"name":"SINCallNotificationResult","abstract":"<p>SINCallNotificationResult is used to indicate the result of <code>-[SINClient relayRemotePushNotificationPayload:]</code>"},"Protocols/SINClient.html":{"name":"SINClient","abstract":"<p>The SINClient is the Sinch SDK entry point.</p>"},"Protocols/SINClientDelegate.html":{"name":"SINClientDelegate","abstract":"<p>The delegate of a SINClient object must adopt the SINClientDelegate"},"Protocols/SINClientRegistration.html":{"name":"SINClientRegistration","abstract":"<p>Callback object to be used to proceed in user registration process when"},"Protocols/SINManagedPushDelegate.html":{"name":"SINManagedPushDelegate","abstract":"<p>SINManagedPushDelegate</p>"},"Protocols/SINNotificationResult.html":{"name":"SINNotificationResult","abstract":"<p>SINNotificationResult is used to indicate the result of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SINClient.html#/c:objc(pl)SINClient(im)relayPushNotification:\">-[SINClient relayPushNotification:]</a></code> and"},"Protocols/SINVideoController.html":{"name":"SINVideoController","abstract":"<p>The SINVideoController provides methods for controlling video related functionality.</p>"},"Protocols/SINVideoFrameCallback.html":{"name":"SINVideoFrameCallback","abstract":"<p>Video frame handler must adopt SINVideoFrameCallback protocol</p>"},"Enums/SINLogSeverity.html#/c:@E@SINLogSeverity@SINLogSeverityTrace":{"name":"SINLogSeverityTrace","abstract":"<p>Undocumented</p>","parent_name":"SINLogSeverity"},"Enums/SINLogSeverity.html#/c:@E@SINLogSeverity@SINLogSeverityInfo":{"name":"SINLogSeverityInfo","abstract":"<p>Undocumented</p>","parent_name":"SINLogSeverity"},"Enums/SINLogSeverity.html#/c:@E@SINLogSeverity@SINLogSeverityWarn":{"name":"SINLogSeverityWarn","abstract":"<p>Undocumented</p>","parent_name":"SINLogSeverity"},"Enums/SINLogSeverity.html#/c:@E@SINLogSeverity@SINLogSeverityCritical":{"name":"SINLogSeverityCritical","abstract":"<p>Undocumented</p>","parent_name":"SINLogSeverity"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseNone":{"name":"SINCallEndCauseNone","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseTimeout":{"name":"SINCallEndCauseTimeout","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseDenied":{"name":"SINCallEndCauseDenied","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseNoAnswer":{"name":"SINCallEndCauseNoAnswer","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseError":{"name":"SINCallEndCauseError","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseHungUp":{"name":"SINCallEndCauseHungUp","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseCanceled":{"name":"SINCallEndCauseCanceled","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallEndCause.html#/c:@E@SINCallEndCause@SINCallEndCauseOtherDeviceAnswered":{"name":"SINCallEndCauseOtherDeviceAnswered","abstract":"<p>Undocumented</p>","parent_name":"SINCallEndCause"},"Enums/SINCallDirection.html#/c:@E@SINCallDirection@SINCallDirectionIncoming":{"name":"SINCallDirectionIncoming","abstract":"<p>Undocumented</p>","parent_name":"SINCallDirection"},"Enums/SINCallDirection.html#/c:@E@SINCallDirection@SINCallDirectionOutgoing":{"name":"SINCallDirectionOutgoing","abstract":"<p>Undocumented</p>","parent_name":"SINCallDirection"},"Enums/SINCallState.html#/c:@E@SINCallState@SINCallStateInitiating":{"name":"SINCallStateInitiating","abstract":"<p>Undocumented</p>","parent_name":"SINCallState"},"Enums/SINCallState.html#/c:@E@SINCallState@SINCallStateProgressing":{"name":"SINCallStateProgressing","abstract":"<p>Only applicable to outgoing calls</p>","parent_name":"SINCallState"},"Enums/SINCallState.html#/c:@E@SINCallState@SINCallStateEstablished":{"name":"SINCallStateEstablished","abstract":"<p>Only applicable to outgoing calls</p>","parent_name":"SINCallState"},"Enums/SINCallState.html#/c:@E@SINCallState@SINCallStateEnded":{"name":"SINCallStateEnded","abstract":"<p>Only applicable to outgoing calls</p>","parent_name":"SINCallState"},"Enums/SINAPSEnvironment.html#/c:@E@SINAPSEnvironment@SINAPSEnvironmentDevelopment":{"name":"SINAPSEnvironmentDevelopment","abstract":"<p>APNs Development environment</p>","parent_name":"SINAPSEnvironment"},"Enums/SINAPSEnvironment.html#/c:@E@SINAPSEnvironment@SINAPSEnvironmentProduction":{"name":"SINAPSEnvironmentProduction","abstract":"<p>APNs Production environment</p>","parent_name":"SINAPSEnvironment"},"Enums/SINAPSEnvironment.html":{"name":"SINAPSEnvironment","abstract":"<p>SINAPSEnvironment is used to declare to which Apple Push Notification Service environment a device token is bound to.</p>"},"Enums/SINCallState.html":{"name":"SINCallState","abstract":"<p>Describes states call can be in</p>"},"Enums/SINCallDirection.html":{"name":"SINCallDirection","abstract":"<p>Describes direction of the call</p>"},"Enums/SINCallEndCause.html":{"name":"SINCallEndCause","abstract":"<p>Describes possbile causes for call end</p>"},"Enums/SINLogSeverity.html":{"name":"SINLogSeverity","abstract":"<p>Defines different types of log severity</p>"},"Constants.html#/c:@SINCallIdKey":{"name":"SINCallIdKey","abstract":"<p>SINCallIdKey is used for a call id in userInfo</p>"},"Constants.html#/c:@SINErrorDomainNetwork":{"name":"SINErrorDomainNetwork","abstract":"<p>Constant that corresponds to network errors in Sinch SDK</p>"},"Constants.html#/c:@SINErrorDomain":{"name":"SINErrorDomain","abstract":"<p>Constant that corresponds to general errors in Sinch SDK</p>"},"Constants.html#/c:@SINPushTypeVoIP":{"name":"SINPushTypeVoIP","abstract":"<p>VoIP push type constant</p>"},"Constants.html#/c:@SINPushTypeKey":{"name":"SINPushTypeKey","abstract":"<p>SINPushTypeKey, userInfo contains this key with value SINPushTypeVoIP</p>"},"Classes/Sinch.html#/c:objc(cs)Sinch(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"Sinch"},"Classes/Sinch.html#/c:objc(cs)Sinch(cm)clientWithApplicationKey:environmentHost:userId:error:":{"name":"+clientWithApplicationKey:environmentHost:userId:error:","abstract":"<p>Instantiate a new client.","parent_name":"Sinch"},"Classes/Sinch.html#/c:objc(cs)Sinch(cm)clientWithApplicationKey:environmentHost:userId:cli:error:":{"name":"+clientWithApplicationKey:environmentHost:userId:cli:error:","abstract":"<p>Instantiate a new client with a CLI (may be used for PSTN-terminated calls).","parent_name":"Sinch"},"Classes/Sinch.html#/c:objc(cs)Sinch(cm)managedPushWithAPSEnvironment:":{"name":"+managedPushWithAPSEnvironment:","abstract":"<p>Instantiate a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SINManagedPush.html\">SINManagedPush</a></code> instance to enable Push Notifications","parent_name":"Sinch"},"Classes/Sinch.html#/c:objc(cs)Sinch(cm)setLogCallback:":{"name":"+setLogCallback:","abstract":"<p>Set a log callback block.</p>","parent_name":"Sinch"},"Classes/Sinch.html#/c:objc(cs)Sinch(cm)setDataProtectionType:":{"name":"+setDataProtectionType:","abstract":"<p>Specify the data protection type (NSFileProtectionType) for the files created and used by the Sinch SDK.","parent_name":"Sinch"},"Classes/Sinch.html#/c:objc(cs)Sinch(cm)versionString":{"name":"+versionString","parent_name":"Sinch"},"Classes/SINManagedPush.html#/c:objc(cs)SINManagedPush(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"SINManagedPush"},"Classes/SINManagedPush.html#/c:objc(cs)SINManagedPush(im)setDesiredPushType:":{"name":"-setDesiredPushType:","abstract":"<p>Requests registration of VoIP push notifications (similar to PushKit&rsquo;s -[PKPushRegistry setDesiredPushTypes:]).</p>","parent_name":"SINManagedPush"},"Classes/SINManagedPush.html#/c:objc(cs)SINManagedPush(im)setDisplayName:error:":{"name":"-setDisplayName:error:","abstract":"<p>Specify a display name to be used when Sinch sends a push notification on","parent_name":"SINManagedPush"},"Classes/SINManagedPush.html#/c:objc(cs)SINManagedPush(im)didCompleteProcessingPushPayload:":{"name":"-didCompleteProcessingPushPayload:","abstract":"<p>This method may be used to indicate to the Sinch SDK that processing of a VoIP push payload is completed","parent_name":"SINManagedPush"},"Classes/SINManagedPush.html#/c:objc(cs)SINManagedPush(cm)queryPushNotificationPayload:":{"name":"+queryPushNotificationPayload:","abstract":"<p>Method used to extract call information contained in raw push notification payload.</p>","parent_name":"SINManagedPush"},"Classes/SINManagedPush.html#/c:objc(cs)SINManagedPush(cm)isSinchPushPayload:":{"name":"+isSinchPushPayload:","abstract":"<p>Determine whether a push notification payload is carrying a Sinch payload.</p>","parent_name":"SINManagedPush"},"Classes/SINManagedPush.html":{"name":"SINManagedPush","abstract":"<p>SINManagedPush is a helper class to manage push notification credentials"},"Classes/Sinch.html":{"name":"Sinch","abstract":"<p>The Sinch class is used to instantiate a SINClient.</p>"},"Categories/UIView%28SINUIViewFullscreenAdditions%29.html#/c:objc(cs)UIView(im)sin_isFullscreen":{"name":"-sin_isFullscreen","parent_name":"UIView(SINUIViewFullscreenAdditions)"},"Categories/UIView%28SINUIViewFullscreenAdditions%29.html#/c:objc(cs)UIView(im)sin_enableFullscreen:":{"name":"-sin_enableFullscreen:","abstract":"<p>Make view go into full screen mode.</p>","parent_name":"UIView(SINUIViewFullscreenAdditions)"},"Categories/UIView%28SINUIViewFullscreenAdditions%29.html#/c:objc(cs)UIView(im)sin_disableFullscreen:":{"name":"-sin_disableFullscreen:","abstract":"<p>Make view go back to it&rsquo;s original state before full screen mode was enabled.</p>","parent_name":"UIView(SINUIViewFullscreenAdditions)"},"Categories/UIView%28SINUIViewFullscreenAdditions%29.html":{"name":"UIView(SINUIViewFullscreenAdditions)","abstract":"<p>SINUIViewFullscreenAdditions are helper methods (implemented as Objective-C"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type%20Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}